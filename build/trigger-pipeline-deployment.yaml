steps:
- name: 'gcr.io/gcp-ml-172005/tfx:1.9.1'
  entrypoint: 'tfx'
  args: ['pipeline', 'compile',
          '--pipeline-path', 'kubeflow_runner.py',
          '--engine', 'vertex',
        ]
  id: 'Compile Pipeline'
  
- name: 'gcr.io/gcp-ml-172005/tfx:1.9.1'
  entrypoint: 'tfx'
  args: ['pipeline', 'create',
          '--pipeline-path', 'kubeflow_runner.py',
          '--engine', 'vertex',
          '--build-image'
        ]
  id: 'Create Pipeline'
  waitFor: ['Compile Pipeline']  
  
- name: 'gcr.io/gcp-ml-172005/tfx:1.9.1'
  entrypoint: 'tfx'
  args: ['run', 'create',
          '--engine', 'vertex',
          '--pipeline-name', '${_PIPELINE_NAME}',
          '--project', '$PROJECT_ID',
          '--region', '${_REGION}',
          '--runtime-parameter', 'output-config="{}"',
          '--runtime-parameter', 'input-config="{\"splits\": [{\"name\": \"train\", \"pattern\": \"span-[12]/train/*.tfrecord\"}, {\"name\": \"val\", \"pattern\": \"span-[12]/test/*.tfrecord\"}]}"
        ]
  id: 'Create Pipeline Run'
  waitFor: ['Create Pipeline']  
